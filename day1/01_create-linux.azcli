#0. 공통 변수
$location = "koreacentral"
# 변수 설정
location="koreacentral"
echo $location

#1. 리소스 그룹 생성
az group create --name "rg-kdk" --location $location
# rg-appsvc 리로스 그룹 생성
az group create --name "rg-appsvc" --location $location

$rg = az group list --query "[?contains(name, 'kdk')].name" --output tsv

#1.1 리소스 그룹 필터링 rg-kdk로 시작하는 리소스 그룹만 조회
$rg = az group list --query "[?starts_with(name, 'rg-kdk')].name" --output tsv

#mac : 공백없이 사용, 괄호로 구문을 감싸서 사용
rg = $(az group list --query "[?contains(name, 'kdk')].name" --output tsv)
rg=$(az group list --query "[?contains(name, 'svc')].name" --output tsv)
echo $rg

#2. 가상 네트워크 생성, 서브넷 생성
az network vnet create --name vnet-kdk --resource-group rg-kdk --location $location --address-prefixes "10.0.0.0/16" --subnet-name subnet-kdk --subnet-prefix "10.0.1.0/24"

# vnet : vnet-appsvc, subnet : subnet-mgmt 로 생성
az network vnet create --name vnet-appsvc --resource-group rg-appsvc --location $location --address-prefixes "10.0.0.0/16" --subnet-name subnet-mgmt --subnet-prefix "10.0.1.0/24"

$vnet = az network vnet list --query "[?contains(name, 'kdk')].name" --output tsv
# mac : vnet 중에 svc를 포함하고 있는 vnet 검색
vnet=$(az network vnet list --query "[?contains(name, 'svc')].name" --output tsv)

$subnet= az network vnet subnet list --vnet-name $vnet --query "[?contains(name, 'kdk')].name" -g $rg --output tsv
# mac : subnet 중에 mgmt를 포함하고 있는 subnet 검색
subnet=$(az network vnet subnet list --vnet-name $vnet --query "[?contains(name, 'mgmt')].name" -g $rg --output tsv)

#3. 네트워크 보안그룹 생성
az network nsg create --name nsg-kdk -g $rg -l $location
# nsg-appsvc 라는 이름으로 네트워크 보안그룹 생성
az network nsg create --name nsg-appsvc -g $rg -l $location

#4. 네트워크 보안그룹이 연결된 가상 네트워크 카드 만들기
az network nic create --name nic-kdk --resource-group $rg --vnet-name $vnet --subnet $subnet --network-security-group nsg-kdk
# nic-appsvc인 네트워크 카드를 nsg-appsvc 네트워크 보안 그룹에 생성
az network nic create --name nic-appsvc --resource-group $rg --vnet-name $vnet --subnet $subnet --network-security-group nsg-appsvc

#5. 공용 IP 주소 생성
az network public-ip create --name pip-kdk --resource-group $rg --location $location
# pip-appsvc 라는 이름으로 공용 ip 생성
az network public-ip create --name pip-appsvc --resource-group $rg --location $location

#6. 네트워크 인터페이스 카드에 공용 IP 주소 연결
az network nic ip-config update --name ipconfig1 --nic-name nic-kdk --public-ip-address pip-kdk --resource-group $rg
# nic-appsvc의 ip-config에 공용 ip pip-appsvc 주소를 update
az network nic ip-config update --name ipconfig1 --nic-name nic-appsvc --public-ip-address pip-appsvc --resource-group $rg

#7. 가상 머신 생성
az vm create --resource-group $rg --name vm-kdk --image Ubuntu2204 --admin-username tony --generate-ssh-keys --nics nic-kdk --location $location --size Standard_B1s
# vm-appsvc 라는 이름의 가상 머신을 만드는데 os는 unbuntu22.04, admin-username은 tony, ssh-key 생성,
# 네트워크 카드, 지역, 크기 설정
az vm create --resource-group $rg --name vm-appsvc --image Ubuntu2204 --admin-username tony --generate-ssh-keys --nics nic-appsvc --location $location --size Standard_B1s

#8. 가상 머신에 연결
ren $home\.ssh\id_rsa vm-kdk_key

#Mac
# ssh key 이름 변경
mv ~/.ssh/id_rsa ~/.ssh/vm-kdk_key
mv $HOME/.ssh/id_rsa $HOME/.ssh/vm-kdk_key

#공용 Ip 주소 확인
$pip = az network public-ip show --name pip-kdk --resource-group $rg --query "[ipAddress]" --output tsv

ssh -i ~/.ssh/vm-kdk_key tony@$pip

ssh -i ~\.ssh\vm-kdk_key tony@$pip